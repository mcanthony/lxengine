//
// Measure the rate of change in the height value as x and y change in
// window coordinates.
//
vec2 dV = vec2(dFdx(value), dFdy(value));

//
// Measure the rate in change in eye-space as we move in window
// coordinates.  This effectively gives us basis vectors on the surface
// expressed in eye coordinates.
//
vec3 dPdx = dFdx(fragVertexEc);
vec3 dPdy = dFdy(fragVertexEc);  
vec3 dPdz = cross(dPdx, dPdy);

//
// After numerous expansions and simplifications, the height map normal
// transformed to eye coordinates looks becomes:
//
vec3 N = normalize(-dV.x * dPdx - dV.y * dPdy + dPdz);

//
// But...
//
// The new bump-based normal was computed relative to the plane of the
// triangle: i.e. a flat shaded normal.  For simplicity, we'll just use a 
// linear delta as an approximation to take us from the "flat" surface to
// the "smooth" surface.  Note: this approximation is less and less accurate 
// the greater the difference between the height map normal and flat normal.
//
vec3 delta = fragNormalEc - normalize(dPdz);
return mix( fragNormalEc, normalize(N + delta), intensity);
