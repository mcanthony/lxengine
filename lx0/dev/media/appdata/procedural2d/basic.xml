<Document>
  <Script>
    <!--
    function checker(s, t)
    {
      var p = ((s - Math.floor(s)) < .5) ? 1 : 0;
      p += ((t - Math.floor(t)) >= .5) ? 1 : 0;

      if (p == 0 || p == 2)
          return 1;
      else
          return 0; 
    }
    
    function stripe(t)
    {
      return (Math.fract(t) < .5);
    }
    
    function wood (s, t)
    {
      var n = .6 + .4 * Math.noise3d(s, 1.4 * t, .25);
      if (stripe(t * 16 * n))
      {
        var k = .75 + .25 * Math.noise3d(.45 + s + t, 10.62 + t, s);
        if (stripe(t * 32 * k))
          return [0.50, 0.16, .13];
        else
          return [0.37, 0.17, .09];
      }
      else
      {
        var k = .75 + .25 * Math.noise3d(.45 + s + t, 10.62 + t, s);
        if (stripe(t * 32 * k))
          return [0.38, 0.17, .12];
        else
          return [0.34, 0.19, .13];
      } 
    }
    
    function f1(s, t)
    {
        var v0 = Math.noise3d(s, t, .10);
        var v1 = Math.noise3d(2.1 * s, 2.1 * t, 88.22);
        var v2 = Math.noise3d(2 * s, 2 * t, .34);
        var v = Math.max(v0, v1, v2);
        var n = Math.min(v0, v1, v2);
        v = Math.mix(v, n, .5);
        return v;
    }

    function f2(s, t)
    {
        var v0 = Math.noise3d(s, t, .10);
        var v1 = Math.noise3d(2.1 * s, 2.1 * t, 88.22);
        var v2 = Math.noise3d(2 * s, 2 * t, .34);
        var v = Math.max(v0, v1, v2);
        return v;
    }
    
    function f3(s, t)
    {
        var v = Math.noise3d(s, t, .10);
        v = .5 - Math.pow(Math.abs(v - .5), .5);
        return v;
    }    

    function f4(s, t)
    {
        var v0 = Math.noise3d(s, t, .10);
        var v1 = Math.noise3d(2.1 * s, 2.1 * t, 88.22);
        var v2 = Math.noise3d(2 * s, 2 * t, .34);
        var v = Math.max(v0, v1, v2);
        var n = Math.min(v0, v1, v2);
        v = Math.mix(v, n, .5);
        v = .5 + Math.sign(v - .5) * Math.pow(Math.abs(v - .5), .5);
        return v;
    }
    
    function f5(s, t)
    {
        var v0 = Math.noise3d(s, t, .10);
        var v1 = Math.noise3d(2.1 * s, 2.1 * t, 88.22);
        var v2 = Math.noise3d(2 * s, 2 * t, .34);
        var v = Math.max(v0, v1, v2);
        var n = Math.min(v0, v1, v2);
        v = Math.mix(v, n, .5);
        v *= .5 + Math.pow(Math.abs(Math.fract(Math.mix(Math.fract(4 * s), v0, v1)) - .5), 1);
        return v;
    }

    function f6(s, t)
    {
        var r =  1.62 * Math.noise3d(s, t, .31);
        s1 = s * Math.cos(r) + t * Math.sin(r);
        t1 = s * Math.sin(r) - t * Math.cos(r);
        v = Math.mix( (Math.sin(s1 * 6.28) + 1) / 2, (Math.cos(t1 * 6.28) + 1) / 2, .5);
        return v;
    }
    
    function f7(s, t)
    {
      var v = Math.max( f6(s, t), f6(s * 2, t * 2) );
      return v;
    }

    function f8(s, t)
    {
      s += Math.noise3d(s, t, .4);
      t += Math.noise3d(s, t, .4);
      var v = Math.checker_dim(s, t);
      return v;
    }

    function f9(s, t)
    {
      s += Math.noise3d(s, t, .4);
      t += Math.noise3d(s, t, .4);
      var v = Math.checker_dim(s, t);
      s += Math.noise3d(s, t, 22.4);
      t += Math.noise3d(s, t, 22.4); 
      var u = Math.spot_dim(.4, [s, t]);
      var w = Math.max(u, v);
      
      return w;
    }
    
    function f10(s, t)
    {
      return Math.mix(f4(s, t), 1, .65) * f9(s, t);
    }
    
    function f11(s, t)
    {
      var a = f10(s, t);
      var b = f10(.96 * s + 444.5, .98 * t + 333.5);
      var c = f10(.93 * s + 124.33, .92 * t + 833.33);
      return Math.mix(Math.max(a, b, c), a, .5);
    }
    
    function f12(s, t)
    {
      s += 2.2 * Math.cos( .2 * Math.TWOPI * Math.noise3d(t, s, .22) );
      t += 2.2 * Math.cos( .2 * Math.TWOPI * Math.noise3d(s, t, 5.22) );
      var r = 1.0 * Math.noise3d(s, t, .4) + .45;
      var u = Math.spot_dim(r, [s, t]);
      return u;
    }    

    function f13(s, t)
    {
      var u = Math.spot_dim(Math.fract(s + t), [s, t]);
      return u;
    }    

    function generate (s, t)
    {  
      var c = 8;
      var v = f13(c * s, c * t);
      return [v, v, v];
    }
    -->
  </Script>
  <Texture>
    {
      width  : 256,
      height : 256,
      type   : "2d",
      source : [ "function", "generate" ],
    }
  </Texture>
</Document>
